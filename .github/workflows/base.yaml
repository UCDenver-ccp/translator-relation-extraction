name: Build/push base container image

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCS_SERVICE_ACCOUNT: ${{ secrets.GCE_SA_KEY }}
  GCE_REGION: ${{ secrets.GCE_REGION }}
  MODEL_STORAGE_BUCKET: ${{ secrets.MODEL_STORAGE_BUCKET }}

jobs:
  build_push-bert-base:
    name: "build/push bluebert-base container image"
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: bluebert-base
      DOCKERFILE: base.Dockerfile
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v7
    - name: List all modified files
      run: |
        for file in "${{ steps.changed-files.outputs.all_modified_files }}"; do
          echo "$file was modified"
        done
    - name: Run step when a file changes
      if: contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE)
      run: |
        echo "Your file ${{ env.DOCKERFILE }} has been modified."
    - name: Set up Cloud SDK
      if: contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE)
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCE_PROJECT }}
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        version: '290.0.1'
    - name: Configure Docker Authentication
      if: contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE)
      run: gcloud --quiet auth configure-docker
    - name: Set MODEL_VERSION env
      if: contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE)
      run: echo "MODEL_VERSION=$(grep 'BASE' MODEL_VERSIONS | cut -f 2 -d '=')" >> $GITHUB_ENV
    - name: Build Docker Image
      if: contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE)
      run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_NAME:$MODEL_VERSION" -f ${{ env.DOCKERFILE }} .
    - name: Publish Docker Image to Google Container Registry
      if: contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE)
      run: docker push "gcr.io/$PROJECT_ID/$IMAGE_NAME:$MODEL_VERSION"

  build_push_train-bl_chemical_to_disease_or_phenotypic_feature-train:
    name: "build/push/train bl_chemical_to_disease_or_phenotypic_feature model"
    needs: "build_push-bert-base"
    runs-on: ubuntu-latest
    env:
      TASK_NAME: bl_chemical_to_disease_or_phenotypic_feature
      DOCKERFILE: train.Dockerfile
      BASE_DOCKERFILE: base.Dockerfile
      DATA_FILE: data/bl_chemical_to_disease_or_phenotypic_feature/data.tsv
      MODEL_VERSION_KEY: CHEMICAL_TO_DISEASE
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v7

    - name: List all modified files
      run: |
        for file in "${{ steps.changed-files.outputs.all_modified_files }}"; do
          echo "$file was modified"
        done

    - name: Run step when a file changes
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        echo "A modified file has triggered a rebuild of the ${{ env.TASK_NAME }} model."

    - name: Set up Cloud SDK
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCE_PROJECT }}
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        version: '290.0.1'

    - name: Configure Docker Authentication
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        gcloud --quiet auth configure-docker

    - name: Set MODEL_VERSION env
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        echo "MODEL_VERSION=$(grep ${{ env.MODEL_VERSION_KEY }} MODEL_VERSIONS | cut -f 2 -d '=')" >> $GITHUB_ENV

    - name: Set BASE_VERSION env
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        echo "BASE_VERSION=$(grep 'BASE' MODEL_VERSIONS | cut -f 2 -d '=')" >> $GITHUB_ENV

    - name: Build Docker Image
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        docker build --build-arg "PROJECT_ID=$PROJECT_ID" \
                     --build-arg "TASK_NAME=$TASK_NAME" \
                     --build-arg "BASE_VERSION=$BASE_VERSION" \
                     --build-arg "TUNED_MODEL_VERSION=$MODEL_VERSION" \
                     --tag "gcr.io/$PROJECT_ID/$TASK_NAME-train:$MODEL_VERSION" \
                     -f ${{ env.DOCKERFILE }} .

    - name: Publish Docker Image to Google Container Registry
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        docker push "gcr.io/$PROJECT_ID/$TASK_NAME-train:$MODEL_VERSION"

    - name: Submit a training job to AI Plaform to train and cache the model
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        gcloud ai-platform jobs submit training "$TASK_NAME_train_$GITHUB_SHA" \
        --scale-tier basic_gpu --region "$GCE_REGION" \
        --master-image-uri "gcr.io/$PROJECT_ID/$TASK_NAME-train:$MODEL_VERSION" \
        -- \
        NO_ARG \
        "$MODEL_STORAGE_BUCKET"

    - name: Monitor the training job
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        sh -c ".github/workflows/monitor-ai-platform-job.sh $TASK_NAME_train_$GITHUB_SHA"

    
  build_push-bl_chemical_to_disease_or_phenotypic_feature-predict:
    name: "build/push bl_chemical_to_disease_or_phenotypic_feature predict container"
    needs: "build_push_train-bl_chemical_to_disease_or_phenotypic_feature-train"
    runs-on: ubuntu-latest
    env:
      TASK_NAME: bl_chemical_to_disease_or_phenotypic_feature
      DOCKERFILE: predict.Dockerfile
      BASE_DOCKERFILE: base.Dockerfile
      MODEL_VERSION_KEY: CHEMICAL_TO_DISEASE
      CLASSIFICATION_LABELS: "treats  false"
      DATA_FILE: data/bl_chemical_to_disease_or_phenotypic_feature/data.tsv
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v7

    - name: List all modified files
      run: |
        for file in "${{ steps.changed-files.outputs.all_modified_files }}"; do
          echo "$file was modified"
        done

    - name: Run step when a file changes
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        echo "A modified file has triggered a rebuild of the ${{ env.TASK_NAME }} predict container."

    - name: Set up Cloud SDK
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCE_PROJECT }}
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        version: '290.0.1'

    - name: Configure Docker Authentication
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        gcloud --quiet auth configure-docker

    - name: Set MODEL_VERSION env
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        echo "MODEL_VERSION=$(grep ${{ env.MODEL_VERSION_KEY }} MODEL_VERSIONS | cut -f 2 -d '=')" >> $GITHUB_ENV

    - name: Set BASE_VERSION env
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        echo "BASE_VERSION=$(grep 'BASE' MODEL_VERSIONS | cut -f 2 -d '=')" >> $GITHUB_ENV

    - name: Build Docker Image
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        docker build --build-arg "PROJECT_ID=$PROJECT_ID" \
                     --build-arg "TASK_NAME=$TASK_NAME" \
                     --build-arg "BASE_VERSION=$BASE_VERSION" \
                     --build-arg "TUNED_MODEL_VERSION=$MODEL_VERSION" \
                     --build-arg "MODEL_STORAGE_BUCKET=$MODEL_STORAGE_BUCKET" \
                     --build-arg "CLASSIFICATION_LABELS=${{ CLASSIFICATION_LABELS }}" \
                     --tag "gcr.io/$PROJECT_ID/$TASK_NAME-predict:$MODEL_VERSION" \
                     -f ${{ env.DOCKERFILE }} .

    - name: Publish Docker Image to Google Container Registry
      if: |
        contains(steps.changed-files.outputs.all_modified_files, env.DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.BASE_DOCKERFILE) ||
        contains(steps.changed-files.outputs.all_modified_files, env.DATA_FILE)
      run: |
        docker push "gcr.io/$PROJECT_ID/$TASK_NAME-predict:$MODEL_VERSION"

